"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadWaccResources = loadWaccResources;

var _Orders = _interopRequireDefault(require("./Orders/Orders"));

var _ReturnOrders = _interopRequireDefault(require("./ReturnOrders/ReturnOrders"));

var _Search = _interopRequireDefault(require("./Search/Search"));

var _Users = _interopRequireDefault(require("./Users/Users"));

var _UserSubscriptions = _interopRequireDefault(require("./UserSubscriptions/UserSubscriptions"));

var _Gifts = _interopRequireDefault(require("./Gifts/Gifts"));

var _Products = _interopRequireDefault(require("./Products/Products"));

var _Toybox = _interopRequireDefault(require("./Stock/Toybox"));

var _ProductAssociations = _interopRequireDefault(require("./ProductAssociations/ProductAssociations"));

var _Assets = _interopRequireDefault(require("./Assets/Assets"));

var _ReturnOrderLines = _interopRequireDefault(require("./ReturnOrderLines/ReturnOrderLines"));

var _Roles = _interopRequireDefault(require("./Roles/Roles"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function loadWaccResources(client) {
  return {
    orders: new _Orders["default"](client),
    returnOrders: new _ReturnOrders["default"](client),
    returnOrderLines: new _ReturnOrderLines["default"](client),
    search: new _Search["default"](client),
    users: new _Users["default"](client),
    userSubscriptions: new _UserSubscriptions["default"](client),
    gifts: new _Gifts["default"](client),
    products: new _Products["default"](client),
    productAssociations: new _ProductAssociations["default"](client),
    assets: new _Assets["default"](client),
    stock: new _Toybox["default"](client),
    roles: new _Roles["default"](client)
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9SZXNvdXJjZXMvV2FjYy9pbmRleC50cyJdLCJuYW1lcyI6WyJsb2FkV2FjY1Jlc291cmNlcyIsImNsaWVudCIsIm9yZGVycyIsIldBQ0NPcmRlcnMiLCJyZXR1cm5PcmRlcnMiLCJXQUNDUmV0dXJuT3JkZXJzIiwicmV0dXJuT3JkZXJMaW5lcyIsIldBQ0NSZXR1cm5PcmRlckxpbmVzIiwic2VhcmNoIiwiV0FDQ1NlYXJjaCIsInVzZXJzIiwiV0FDQ1VzZXJzIiwidXNlclN1YnNjcmlwdGlvbnMiLCJXQUNDVXNlclN1YnNjcmlwdGlvbnMiLCJnaWZ0cyIsIldBQ0NHaWZ0cyIsInByb2R1Y3RzIiwiV0FDQ1Byb2R1Y3RzIiwicHJvZHVjdEFzc29jaWF0aW9ucyIsIldBQ0NQcm9kdWN0QXNzb2NpYXRpb25zIiwiYXNzZXRzIiwiV0FDQ0Fzc2V0cyIsInN0b2NrIiwiV0FDQ1N0b2NrIiwicm9sZXMiLCJXQUNDUm9sZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQWlCTyxTQUFTQSxpQkFBVCxDQUEyQkMsTUFBM0IsRUFBMEQ7QUFDN0QsU0FBTztBQUNIQyxJQUFBQSxNQUFNLEVBQUUsSUFBSUMsa0JBQUosQ0FBZUYsTUFBZixDQURMO0FBRUhHLElBQUFBLFlBQVksRUFBRSxJQUFJQyx3QkFBSixDQUFxQkosTUFBckIsQ0FGWDtBQUdISyxJQUFBQSxnQkFBZ0IsRUFBRSxJQUFJQyw0QkFBSixDQUF5Qk4sTUFBekIsQ0FIZjtBQUlITyxJQUFBQSxNQUFNLEVBQUUsSUFBSUMsa0JBQUosQ0FBZVIsTUFBZixDQUpMO0FBS0hTLElBQUFBLEtBQUssRUFBRSxJQUFJQyxpQkFBSixDQUFjVixNQUFkLENBTEo7QUFNSFcsSUFBQUEsaUJBQWlCLEVBQUUsSUFBSUMsNkJBQUosQ0FBMEJaLE1BQTFCLENBTmhCO0FBT0hhLElBQUFBLEtBQUssRUFBRSxJQUFJQyxpQkFBSixDQUFjZCxNQUFkLENBUEo7QUFRSGUsSUFBQUEsUUFBUSxFQUFFLElBQUlDLG9CQUFKLENBQWlCaEIsTUFBakIsQ0FSUDtBQVNIaUIsSUFBQUEsbUJBQW1CLEVBQUUsSUFBSUMsK0JBQUosQ0FBNEJsQixNQUE1QixDQVRsQjtBQVVIbUIsSUFBQUEsTUFBTSxFQUFFLElBQUlDLGtCQUFKLENBQWVwQixNQUFmLENBVkw7QUFXSHFCLElBQUFBLEtBQUssRUFBRSxJQUFJQyxrQkFBSixDQUFjdEIsTUFBZCxDQVhKO0FBWUh1QixJQUFBQSxLQUFLLEVBQUUsSUFBSUMsaUJBQUosQ0FBY3hCLE1BQWQ7QUFaSixHQUFQO0FBY0giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2xpZW50IGZyb20gJy4uLy4uL0NsaWVudCc7XG5pbXBvcnQgV0FDQ09yZGVycyBmcm9tICcuL09yZGVycy9PcmRlcnMnO1xuaW1wb3J0IFdBQ0NSZXR1cm5PcmRlcnMgZnJvbSAnLi9SZXR1cm5PcmRlcnMvUmV0dXJuT3JkZXJzJztcbmltcG9ydCBXQUNDU2VhcmNoIGZyb20gJy4vU2VhcmNoL1NlYXJjaCc7XG5pbXBvcnQgV0FDQ1VzZXJzIGZyb20gJy4vVXNlcnMvVXNlcnMnO1xuaW1wb3J0IFdBQ0NVc2VyU3Vic2NyaXB0aW9ucyBmcm9tICcuL1VzZXJTdWJzY3JpcHRpb25zL1VzZXJTdWJzY3JpcHRpb25zJztcbmltcG9ydCBXQUNDR2lmdHMgZnJvbSAnLi9HaWZ0cy9HaWZ0cyc7XG5pbXBvcnQgV0FDQ1Byb2R1Y3RzIGZyb20gJy4vUHJvZHVjdHMvUHJvZHVjdHMnO1xuaW1wb3J0IFdBQ0NTdG9jayBmcm9tICcuL1N0b2NrL1RveWJveCc7XG5pbXBvcnQgV0FDQ1Byb2R1Y3RBc3NvY2lhdGlvbnMgZnJvbSAnLi9Qcm9kdWN0QXNzb2NpYXRpb25zL1Byb2R1Y3RBc3NvY2lhdGlvbnMnO1xuaW1wb3J0IFdBQ0NBc3NldHMgZnJvbSAnLi9Bc3NldHMvQXNzZXRzJztcbmltcG9ydCBXQUNDUmV0dXJuT3JkZXJMaW5lcyBmcm9tICcuL1JldHVybk9yZGVyTGluZXMvUmV0dXJuT3JkZXJMaW5lcyc7XG5pbXBvcnQgV0FDQ1JvbGVzIGZyb20gJy4vUm9sZXMvUm9sZXMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFdhY2NSZXNvdXJjZXMge1xuICAgIG9yZGVyczogV0FDQ09yZGVycztcbiAgICByZXR1cm5PcmRlcnM6IFdBQ0NSZXR1cm5PcmRlcnM7XG4gICAgcmV0dXJuT3JkZXJMaW5lczogV0FDQ1JldHVybk9yZGVyTGluZXM7XG4gICAgc2VhcmNoOiBXQUNDU2VhcmNoO1xuICAgIHVzZXJzOiBXQUNDVXNlcnM7XG4gICAgdXNlclN1YnNjcmlwdGlvbnM6IFdBQ0NVc2VyU3Vic2NyaXB0aW9ucztcbiAgICBnaWZ0czogV0FDQ0dpZnRzO1xuICAgIHByb2R1Y3RzOiBXQUNDUHJvZHVjdHM7XG4gICAgcHJvZHVjdEFzc29jaWF0aW9uczogV0FDQ1Byb2R1Y3RBc3NvY2lhdGlvbnM7XG4gICAgYXNzZXRzOiBXQUNDQXNzZXRzO1xuICAgIHN0b2NrOiBXQUNDU3RvY2s7XG4gICAgcm9sZXM6IFdBQ0NSb2xlcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRXYWNjUmVzb3VyY2VzKGNsaWVudDogQ2xpZW50KTogV2FjY1Jlc291cmNlcyB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb3JkZXJzOiBuZXcgV0FDQ09yZGVycyhjbGllbnQpLFxuICAgICAgICByZXR1cm5PcmRlcnM6IG5ldyBXQUNDUmV0dXJuT3JkZXJzKGNsaWVudCksXG4gICAgICAgIHJldHVybk9yZGVyTGluZXM6IG5ldyBXQUNDUmV0dXJuT3JkZXJMaW5lcyhjbGllbnQpLFxuICAgICAgICBzZWFyY2g6IG5ldyBXQUNDU2VhcmNoKGNsaWVudCksXG4gICAgICAgIHVzZXJzOiBuZXcgV0FDQ1VzZXJzKGNsaWVudCksXG4gICAgICAgIHVzZXJTdWJzY3JpcHRpb25zOiBuZXcgV0FDQ1VzZXJTdWJzY3JpcHRpb25zKGNsaWVudCksXG4gICAgICAgIGdpZnRzOiBuZXcgV0FDQ0dpZnRzKGNsaWVudCksXG4gICAgICAgIHByb2R1Y3RzOiBuZXcgV0FDQ1Byb2R1Y3RzKGNsaWVudCksXG4gICAgICAgIHByb2R1Y3RBc3NvY2lhdGlvbnM6IG5ldyBXQUNDUHJvZHVjdEFzc29jaWF0aW9ucyhjbGllbnQpLFxuICAgICAgICBhc3NldHM6IG5ldyBXQUNDQXNzZXRzKGNsaWVudCksXG4gICAgICAgIHN0b2NrOiBuZXcgV0FDQ1N0b2NrKGNsaWVudCksXG4gICAgICAgIHJvbGVzOiBuZXcgV0FDQ1JvbGVzKGNsaWVudCksXG4gICAgfTtcbn1cbiJdfQ==